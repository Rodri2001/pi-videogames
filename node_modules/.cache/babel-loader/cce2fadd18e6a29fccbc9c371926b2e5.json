{"ast":null,"code":"import { GET_VIDEOGAMES, GET_VIDEOGAME_BY_ID, GET_VIDEOGAMES_BY_NAME, GET_GENRES, GET_VIDEOGAMES_FILTER, FILTER_BY_GENRE, FILTER } from '../reduxConstants';\nconst initialState = {\n  videogame: {},\n  videogames: [],\n  genres: [],\n  filter: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === GET_VIDEOGAMES) {\n    return { ...state,\n      videogames: action.payload\n    };\n  }\n\n  if (action.type === GET_GENRES) {\n    return { ...state,\n      genres: action.payload\n    };\n  }\n\n  if (action.type === GET_VIDEOGAME_BY_ID) {\n    return { ...state,\n      videogame: action.payload\n    };\n  }\n\n  if (action.type === GET_VIDEOGAMES_BY_NAME) {\n    return { ...state,\n      videogames: action.payload\n    };\n  } // if (action.type === FILTER_BY_GENRE) {\n  //     let videogamesGenre;\n  //     if (action.payload === \"All\") {\n  //         videogamesGenre = state.videogames\n  //     } else {\n  //         videogamesGenre = state.videogames.filter(g => g.genres.includes(action.payload))\n  //     }\n  //     return {\n  //         ...state,\n  //         filter: [...videogamesGenre]\n  //     }\n  // }\n\n\n  if (action.type === FILTER) {\n    let check = state.filter;\n    let filter;\n\n    if (action.payload === \"all\") {\n      filter = action.payload.response;\n    } else if (action.payload.param === \"API\") {\n      filter = check.filter(v => typeof v.id === \"number\");\n    } else if (action.payload.param === \"CREATED\") {\n      filter = check.filter(v => typeof v.id !== \"number\");\n    } else {\n      filter = check.filter(v => v.genres.includes(action.payload.param));\n    }\n\n    return { ...state,\n      filter: filter\n    };\n  }\n\n  return state;\n}","map":{"version":3,"names":["GET_VIDEOGAMES","GET_VIDEOGAME_BY_ID","GET_VIDEOGAMES_BY_NAME","GET_GENRES","GET_VIDEOGAMES_FILTER","FILTER_BY_GENRE","FILTER","initialState","videogame","videogames","genres","filter","rootReducer","state","action","type","payload","check","response","param","v","id","includes"],"sources":["C:/Users/Cami/Desktop/PI-Videogames-main/PI-Videogames-main/client/src/redux/reducers/index.js"],"sourcesContent":["import { GET_VIDEOGAMES, GET_VIDEOGAME_BY_ID, GET_VIDEOGAMES_BY_NAME, GET_GENRES, GET_VIDEOGAMES_FILTER, FILTER_BY_GENRE, FILTER } from '../reduxConstants';\r\n\r\nconst initialState = {\r\n    videogame: {},\r\n    videogames: [],\r\n    genres: [],\r\n    filter: []\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n\r\n    if (action.type === GET_VIDEOGAMES) {\r\n        return {\r\n            ...state,\r\n            videogames: action.payload\r\n        }\r\n    }\r\n\r\n    if (action.type === GET_GENRES) {\r\n        return {\r\n            ...state,\r\n            genres: action.payload\r\n        }\r\n    }\r\n\r\n    if (action.type === GET_VIDEOGAME_BY_ID) {\r\n        return {\r\n            ...state,\r\n            videogame: action.payload\r\n        }\r\n    }\r\n\r\n    if (action.type === GET_VIDEOGAMES_BY_NAME) {\r\n        return {\r\n            ...state,\r\n            videogames: action.payload\r\n        }\r\n    }\r\n\r\n    // if (action.type === FILTER_BY_GENRE) {\r\n    //     let videogamesGenre;\r\n        \r\n    //     if (action.payload === \"All\") {\r\n    //         videogamesGenre = state.videogames\r\n    //     } else {\r\n    //         videogamesGenre = state.videogames.filter(g => g.genres.includes(action.payload))\r\n    //     }\r\n\r\n    //     return {\r\n    //         ...state,\r\n    //         filter: [...videogamesGenre]\r\n    //     }\r\n    // }\r\n\r\n    if (action.type === FILTER) {\r\n        let check = state.filter\r\n        let filter;\r\n        if(action.payload === \"all\"){\r\n            filter = action.payload.response\r\n        } else if(action.payload.param === \"API\"){\r\n            filter = check.filter(v => typeof v.id === \"number\")\r\n        } else if (action.payload.param === \"CREATED\") {\r\n            filter = check.filter(v => typeof v.id !== \"number\")\r\n        } else {\r\n            filter = check.filter(v => v.genres.includes(action.payload.param))\r\n        }\r\n        return {\r\n            ...state,\r\n            filter: filter\r\n        }\r\n    }\r\n\r\n    return state\r\n}"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,mBAAzB,EAA8CC,sBAA9C,EAAsEC,UAAtE,EAAkFC,qBAAlF,EAAyGC,eAAzG,EAA0HC,MAA1H,QAAwI,mBAAxI;AAEA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EADM;EAEjBC,UAAU,EAAE,EAFK;EAGjBC,MAAM,EAAE,EAHS;EAIjBC,MAAM,EAAE;AAJS,CAArB;AAOA,eAAe,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBN,YAAsB;EAAA,IAARO,MAAQ;;EAE9D,IAAIA,MAAM,CAACC,IAAP,KAAgBf,cAApB,EAAoC;IAChC,OAAO,EACH,GAAGa,KADA;MAEHJ,UAAU,EAAEK,MAAM,CAACE;IAFhB,CAAP;EAIH;;EAED,IAAIF,MAAM,CAACC,IAAP,KAAgBZ,UAApB,EAAgC;IAC5B,OAAO,EACH,GAAGU,KADA;MAEHH,MAAM,EAAEI,MAAM,CAACE;IAFZ,CAAP;EAIH;;EAED,IAAIF,MAAM,CAACC,IAAP,KAAgBd,mBAApB,EAAyC;IACrC,OAAO,EACH,GAAGY,KADA;MAEHL,SAAS,EAAEM,MAAM,CAACE;IAFf,CAAP;EAIH;;EAED,IAAIF,MAAM,CAACC,IAAP,KAAgBb,sBAApB,EAA4C;IACxC,OAAO,EACH,GAAGW,KADA;MAEHJ,UAAU,EAAEK,MAAM,CAACE;IAFhB,CAAP;EAIH,CA5B6D,CA8B9D;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EAEA,IAAIF,MAAM,CAACC,IAAP,KAAgBT,MAApB,EAA4B;IACxB,IAAIW,KAAK,GAAGJ,KAAK,CAACF,MAAlB;IACA,IAAIA,MAAJ;;IACA,IAAGG,MAAM,CAACE,OAAP,KAAmB,KAAtB,EAA4B;MACxBL,MAAM,GAAGG,MAAM,CAACE,OAAP,CAAeE,QAAxB;IACH,CAFD,MAEO,IAAGJ,MAAM,CAACE,OAAP,CAAeG,KAAf,KAAyB,KAA5B,EAAkC;MACrCR,MAAM,GAAGM,KAAK,CAACN,MAAN,CAAaS,CAAC,IAAI,OAAOA,CAAC,CAACC,EAAT,KAAgB,QAAlC,CAAT;IACH,CAFM,MAEA,IAAIP,MAAM,CAACE,OAAP,CAAeG,KAAf,KAAyB,SAA7B,EAAwC;MAC3CR,MAAM,GAAGM,KAAK,CAACN,MAAN,CAAaS,CAAC,IAAI,OAAOA,CAAC,CAACC,EAAT,KAAgB,QAAlC,CAAT;IACH,CAFM,MAEA;MACHV,MAAM,GAAGM,KAAK,CAACN,MAAN,CAAaS,CAAC,IAAIA,CAAC,CAACV,MAAF,CAASY,QAAT,CAAkBR,MAAM,CAACE,OAAP,CAAeG,KAAjC,CAAlB,CAAT;IACH;;IACD,OAAO,EACH,GAAGN,KADA;MAEHF,MAAM,EAAEA;IAFL,CAAP;EAIH;;EAED,OAAOE,KAAP;AACH"},"metadata":{},"sourceType":"module"}